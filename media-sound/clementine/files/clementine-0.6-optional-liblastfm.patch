diff --git a/CMakeLists.txt b/CMakeLists.txt
index 449d920..34f6951 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -95,7 +95,6 @@ include_directories(${GSTREAMER_INCLUDE_DIRS})
 include_directories(${GLIB_INCLUDE_DIRS})
 include_directories(${GLIBCONFIG_INCLUDE_DIRS})
 include_directories(${LIBXML_INCLUDE_DIRS})
-include_directories(${LASTFM_INCLUDE_DIRS})
 include_directories("3rdparty/qsqlite")
 include_directories("3rdparty/universalchardet")
 
@@ -126,6 +125,7 @@ option(ENABLE_GIO "GIO backend" ON)
 option(ENABLE_VISUALISATIONS "Use libprojectm visualisations" ON)
 option(BUNDLE_PROJECTM_PRESETS "Install Clementine's own copies of libprojectm presets - disable this if you want to use a system package instead" ON)
 option(ENABLE_SOUNDMENU "Add Clementine to the Gnome sound menu" ON)
+option(ENABLE_LIBLASTFM "Use liblastfm for fetching song info, scrobbling and radio streams" ON)
 
 if(NOT APPLE AND NOT WIN32)
   option(ENABLE_WIIMOTEDEV "Enable Wii remote support in Clementine" ON)
@@ -151,6 +151,10 @@ if(ENABLE_SOUNDMENU AND INDICATEQT_FOUND)
   set(HAVE_LIBINDICATE ON)
 endif(ENABLE_SOUNDMENU AND INDICATEQT_FOUND)
 
+if(ENABLE_LIBLASTFM AND LASTFM_LIBRARIES AND LASTFM_INCLUDE_DIRS)
+  set(HAVE_LIBLASTFM ON)
+endif(ENABLE_LIBLASTFM AND LASTFM_LIBRARIES AND LASTFM_INCLUDE_DIRS)
+
 if(ENABLE_VISUALISATIONS)
   # When/if upstream accepts our patches then these options can be used to link
   # to system installed projectM instead.
@@ -255,4 +259,5 @@ summary_add("devices: GIO backend" HAVE_GIO)
 summary_add("Gnome sound menu integration" HAVE_LIBINDICATE)
 summary_add("Wiimote support" ENABLE_WIIMOTEDEV)
 summary_add("Visualisations" ENABLE_VISUALISATIONS)
+summary_add("Last.fm support" HAVE_LIBLASTFM)
 summary_show()
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 6cdff07..530ff23 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -24,6 +24,10 @@ if(HAVE_LIBINDICATE)
   include_directories(${INDICATEQT_INCLUDE_DIRS})
 endif(HAVE_LIBINDICATE)
 
+if(HAVE_LIBLASTFM)
+  include_directories(${LASTFM_INCLUDE_DIRS})
+endif(HAVE_LIBLASTFM)
+
 cmake_policy(SET CMP0011 NEW)
 include(../cmake/AddEngine.cmake)
 include(../cmake/ParseArguments.cmake)
@@ -38,7 +42,6 @@ set(SOURCES
   analyzers/sonogram.cpp
   analyzers/turbine.cpp
 
-  core/albumcoverfetcher.cpp
   core/albumcoverloader.cpp
   core/backgroundstreams.cpp
   core/backgroundthread.cpp
@@ -121,7 +124,6 @@ set(SOURCES
   playlistparsers/xmlparser.cpp
   playlistparsers/xspfparser.cpp
 
-  radio/fixlastfm.cpp
   radio/icecastbackend.cpp
   radio/icecastfilterwidget.cpp
   radio/icecastmodel.cpp
@@ -129,9 +131,6 @@ set(SOURCES
   radio/jamendodynamicplaylist.cpp
   radio/jamendoplaylistitem.cpp
   radio/jamendoservice.cpp
-  radio/lastfmconfig.cpp
-  radio/lastfmservice.cpp
-  radio/lastfmstationdialog.cpp
   radio/magnatuneconfig.cpp
   radio/magnatunedownloaddialog.cpp
   radio/magnatuneplaylistitem.cpp
@@ -161,9 +160,6 @@ set(SOURCES
   songinfo/collapsibleinfopane.cpp
   songinfo/echonestbiographies.cpp
   songinfo/echonestimages.cpp
-  songinfo/echonestsimilarartists.cpp
-  songinfo/echonesttags.cpp
-  songinfo/lastfmtrackinfoprovider.cpp
   songinfo/lyricsettings.cpp
   songinfo/songinfobase.cpp
   songinfo/songinfofetcher.cpp
@@ -171,15 +167,11 @@ set(SOURCES
   songinfo/songinfotextview.cpp
   songinfo/songinfoview.cpp
   songinfo/songplaystats.cpp
-  songinfo/tagwidget.cpp
   songinfo/ultimatelyricsprovider.cpp
   songinfo/ultimatelyricsreader.cpp
 
   ui/about.cpp
   ui/addstreamdialog.cpp
-  ui/albumcovermanager.cpp
-  ui/albumcovermanagerlist.cpp
-  ui/albumcoversearcher.cpp
   ui/edittagdialog.cpp
   ui/equalizer.cpp
   ui/flowlayout.cpp
@@ -232,7 +224,6 @@ set(HEADERS
   analyzers/sonogram.h
   analyzers/turbine.h
 
-  core/albumcoverfetcher.h
   core/albumcoverloader.h
   core/backgroundstreams.h
   core/backgroundthread.h
@@ -301,9 +292,6 @@ set(HEADERS
   radio/icecastservice.h
   radio/jamendodynamicplaylist.h
   radio/jamendoservice.h
-  radio/lastfmconfig.h
-  radio/lastfmservice.h
-  radio/lastfmstationdialog.h
   radio/magnatuneconfig.h
   radio/magnatunedownloaddialog.h
   radio/magnatuneservice.h
@@ -329,9 +317,6 @@ set(HEADERS
   songinfo/collapsibleinfopane.h
   songinfo/echonestbiographies.h
   songinfo/echonestimages.h
-  songinfo/echonestsimilarartists.h
-  songinfo/echonesttags.h
-  songinfo/lastfmtrackinfoprovider.h
   songinfo/lyricsettings.h
   songinfo/songinfobase.h
   songinfo/songinfofetcher.h
@@ -339,15 +324,11 @@ set(HEADERS
   songinfo/songinfotextview.h
   songinfo/songinfoview.h
   songinfo/songplaystats.h
-  songinfo/tagwidget.h
   songinfo/ultimatelyricsprovider.h
   songinfo/ultimatelyricsreader.h
 
   ui/about.h
   ui/addstreamdialog.h
-  ui/albumcovermanager.h
-  ui/albumcovermanagerlist.h
-  ui/albumcoversearcher.h
   ui/edittagdialog.h
   ui/equalizer.h
   ui/globalshortcutgrabber.h
@@ -400,8 +381,6 @@ set(UI
   playlist/queuemanager.ui
 
   radio/icecastfilterwidget.ui
-  radio/lastfmconfig.ui
-  radio/lastfmstationdialog.ui
   radio/magnatuneconfig.ui
   radio/magnatunedownloaddialog.ui
   radio/radioviewcontainer.ui
@@ -416,8 +395,6 @@ set(UI
 
   ui/about.ui
   ui/addstreamdialog.ui
-  ui/albumcovermanager.ui
-  ui/albumcoversearcher.ui
   ui/edittagdialog.ui
   ui/equalizer.ui
   ui/globalshortcutgrabber.ui
@@ -502,6 +479,43 @@ if(ENABLE_VISUALISATIONS)
   )
 endif(ENABLE_VISUALISATIONS)
 
+# Lastfm
+if(HAVE_LIBLASTFM)
+  list(APPEND SOURCES
+    core/albumcoverfetcher.cpp
+    radio/fixlastfm.cpp
+    radio/lastfmconfig.cpp
+    radio/lastfmservice.cpp
+    radio/lastfmstationdialog.cpp
+    songinfo/echonestsimilarartists.cpp
+    songinfo/echonesttags.cpp
+    songinfo/lastfmtrackinfoprovider.cpp
+    songinfo/tagwidget.cpp
+    ui/albumcovermanager.cpp
+    ui/albumcovermanagerlist.cpp
+    ui/albumcoversearcher.cpp
+  )
+  list(APPEND HEADERS
+    core/albumcoverfetcher.h
+    radio/lastfmconfig.h
+    radio/lastfmservice.h
+    radio/lastfmstationdialog.h
+    songinfo/echonestsimilarartists.h
+    songinfo/echonesttags.h
+    songinfo/lastfmtrackinfoprovider.h
+    songinfo/tagwidget.h
+    ui/albumcovermanager.h
+    ui/albumcovermanagerlist.h
+    ui/albumcoversearcher.h
+  )
+  list(APPEND UI
+    radio/lastfmconfig.ui
+    radio/lastfmstationdialog.ui
+    ui/albumcovermanager.ui
+    ui/albumcoversearcher.ui
+  )
+endif(HAVE_LIBLASTFM)
+
 # Transcoder
 if(HAVE_GSTREAMER)
   list(APPEND SOURCES
@@ -767,7 +781,6 @@ target_link_libraries(clementine_lib
   ${TAGLIB_LIBRARIES}
   ${QT_LIBRARIES}
   ${ENGINE_LIBRARIES}
-  ${LASTFM_LIBRARIES}
   ${QTSINGLEAPPLICATION_LIBRARIES}
   ${QTSINGLECOREAPPLICATION_LIBRARIES}
   ${QTIOCOMPRESSOR_LIBRARIES}
@@ -780,6 +793,10 @@ if(ENABLE_VISUALISATIONS)
   target_link_libraries(clementine_lib ${LIBPROJECTM_LIBRARIES})
 endif(ENABLE_VISUALISATIONS)
 
+if(HAVE_LIBLASTFM)
+  target_link_libraries(clementine_lib ${LASTFM_LIBRARIES})
+endif(HAVE_LIBLASTFM)
+
 if(HAVE_LIBGPOD)
   target_link_libraries(clementine_lib ${LIBGPOD_LIBRARIES})
 endif(HAVE_LIBGPOD)
diff --git a/src/config.h.in b/src/config.h.in
index 5ec3eef..2f3f580 100644
--- a/src/config.h.in
+++ b/src/config.h.in
@@ -47,4 +47,6 @@
 
 #cmakedefine HAVE_LIBINDICATE
 
+#cmakedefine HAVE_LIBLASTFM
+
 #endif // CONFIG_H_IN
diff --git a/src/core/player.cpp b/src/core/player.cpp
index c371591..2c0ba2d 100644
--- a/src/core/player.cpp
+++ b/src/core/player.cpp
@@ -21,7 +21,6 @@
 #include "playlist/playlist.h"
 #include "playlist/playlistitem.h"
 #include "playlist/playlistmanager.h"
-#include "radio/lastfmservice.h"
 #include "mpris_common.h"
 
 #ifdef HAVE_GSTREAMER
@@ -36,6 +35,9 @@
 #ifdef HAVE_QT_PHONON
 #  include "engines/phononengine.h"
 #endif
+#ifdef HAVE_LIBLASTFM
+#  include "radio/lastfmservice.h"
+#endif
 
 #ifdef Q_WS_X11
 #  include "mpris.h"
@@ -53,13 +55,18 @@ using boost::shared_ptr;
 
 
 Player::Player(MainWindow* main_window, PlaylistManager* playlists,
-               LastFMService* lastfm, Engine::Type engine, QObject* parent)
+#ifdef HAVE_LIBLASTFM
+               LastFMService* lastfm,
+#endif
+               Engine::Type engine, QObject* parent)
   : QObject(parent),
     art_loader_(new mpris::ArtLoader(this)),
     mpris1_(NULL),
     mpris2_(NULL),
     playlists_(playlists),
+#ifdef HAVE_LIBLASTFM
     lastfm_(lastfm),
+#endif
     engine_(CreateEngine(engine)),
     stream_change_type_(Engine::First),
     last_state_(Engine::Empty),
@@ -322,13 +329,17 @@ void Player::PlayAt(int index, Engine::TrackChangeType change, bool reshuffle) {
     loading_async_ = QUrl();
     engine_->Play(current_item_->Url(), change);
 
+#ifdef HAVE_LIBLASTFM
     if (lastfm_->IsScrobblingEnabled())
       lastfm_->NowPlaying(current_item_->Metadata());
+#endif
   }
 }
 
 void Player::CurrentMetadataChanged(const Song& metadata) {
+#ifdef HAVE_LIBLASTFM
   lastfm_->NowPlaying(metadata);
+#endif
 }
 
 void Player::Seek(int seconds) {
diff --git a/src/core/player.h b/src/core/player.h
index b969c9b..ef6999b 100644
--- a/src/core/player.h
+++ b/src/core/player.h
@@ -30,9 +30,12 @@
 
 class PlaylistManager;
 class Settings;
-class LastFMService;
 class MainWindow;
 
+#ifdef HAVE_LIBLASTFM
+  class LastFMService;
+#endif
+
 namespace mpris {
   class Mpris1;
   class Mpris2;
@@ -50,7 +53,10 @@ class Player : public QObject {
 
  public:
   Player(MainWindow* main_window, PlaylistManager* playlists,
-         LastFMService* lastfm, Engine::Type engine, QObject* parent = 0);
+#ifdef HAVE_LIBLASTFM
+         LastFMService* lastfm,
+#endif
+         Engine::Type engine, QObject* parent = 0);
   ~Player();
 
   EngineBase* CreateEngine(Engine::Type engine);
@@ -124,7 +130,9 @@ class Player : public QObject {
   mpris::Mpris2* mpris2_;
 
   PlaylistManager* playlists_;
+#ifdef HAVE_LIBLASTFM
   LastFMService* lastfm_;
+#endif
   QSettings settings_;
 
   PlaylistItemPtr current_item_;
diff --git a/src/core/song.cpp b/src/core/song.cpp
index e5c9971..a5562d8 100644
--- a/src/core/song.cpp
+++ b/src/core/song.cpp
@@ -42,8 +42,10 @@
 #include <taglib/vorbisfile.h>
 #include <taglib/wavfile.h>
 
-#include "radio/fixlastfm.h"
-#include <lastfm/Track>
+#ifdef HAVE_LIBLASTFM
+  #include "radio/fixlastfm.h"
+  #include <lastfm/Track>
+#endif
 
 #include <QFile>
 #include <QFileInfo>
@@ -485,6 +487,7 @@ void Song::InitFromQuery(const SqlRow& q, int col) {
   #undef tofloat
 }
 
+#ifdef HAVE_LIBLASTFM
 void Song::InitFromLastFM(const lastfm::Track& track) {
   d->valid_ = true;
   d->filetype_ = Type_Stream;
@@ -495,6 +498,7 @@ void Song::InitFromLastFM(const lastfm::Track& track) {
   d->track_ = track.trackNumber();
   d->length_ = track.duration();
 }
+#endif // HAVE_LIBLASTFM
 
 #ifdef HAVE_LIBGPOD
   void Song::InitFromItdb(const Itdb_Track* track) {
@@ -948,6 +952,7 @@ void Song::BindToFtsQuery(QSqlQuery *query) const {
   query->bindValue(":ftscomment", d->comment_);
 }
 
+#ifdef HAVE_LIBLASTFM
 void Song::ToLastFM(lastfm::Track* track) const {
   lastfm::MutableTrack mtrack(*track);
 
@@ -958,6 +963,7 @@ void Song::ToLastFM(lastfm::Track* track) const {
   mtrack.setTrackNumber(d->track_);
   mtrack.setSource(lastfm::Track::Player);
 }
+#endif // HAVE_LIBLASTFM
 
 QString Song::PrettyTitle() const {
   QString title(d->title_);
diff --git a/src/core/song.h b/src/core/song.h
index 4edfa35..ac01771 100644
--- a/src/core/song.h
+++ b/src/core/song.h
@@ -46,9 +46,11 @@
 
 class SqlRow;
 
-namespace lastfm {
-  class Track;
-}
+#ifdef HAVE_LIBLASTFM
+  namespace lastfm {
+    class Track;
+  }
+#endif
 
 namespace TagLib {
   class FileRef;
@@ -112,7 +114,9 @@ class Song {
   void Init(const QString& title, const QString& artist, const QString& album, int length);
   void InitFromFile(const QString& filename, int directory_id);
   void InitFromQuery(const SqlRow& query, int col = 0);
+#ifdef HAVE_LIBLASTFM
   void InitFromLastFM(const lastfm::Track& track);
+#endif
 
   void MergeFromSimpleMetaBundle(const Engine::SimpleMetaBundle& bundle);
 
@@ -137,7 +141,9 @@ class Song {
   // Save
   void BindToQuery(QSqlQuery* query) const;
   void BindToFtsQuery(QSqlQuery* query) const;
+#ifdef HAVE_LIBLASTFM
   void ToLastFM(lastfm::Track* track) const;
+#endif
 
   // Simple accessors
   bool is_valid() const { return d->valid_; }
diff --git a/src/main.cpp b/src/main.cpp
index 50350b3..26c5587 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -33,7 +33,6 @@
 #include "core/utilities.h"
 #include "engines/enginebase.h"
 #include "library/directory.h"
-#include "radio/lastfmservice.h"
 #include "smartplaylists/generator.h"
 #include "ui/equalizer.h"
 #include "ui/iconloader.h"
@@ -55,6 +54,9 @@
 #include <echonest/Config.h>
 
 
+#ifdef HAVE_LIBLASTFM
+  #include "radio/lastfmservice.h"
+#endif
 
 #ifdef HAVE_GSTREAMER
 #  include <gst/gst.h>
@@ -151,8 +153,10 @@ int main(int argc, char *argv[]) {
   qRegisterMetaType<GstEnginePipeline*>("GstEnginePipeline*");
 #endif
 
+#ifdef HAVE_LIBLASTFM
   lastfm::ws::ApiKey = LastFMService::kApiKey;
   lastfm::ws::SharedSecret = LastFMService::kSecret;
+#endif
 
   // Parse commandline options - need to do this before starting the
   // QApplication so it works without an X server
diff --git a/src/playlist/playlist.cpp b/src/playlist/playlist.cpp
index 65894d6..9307b4f 100644
--- a/src/playlist/playlist.cpp
+++ b/src/playlist/playlist.cpp
@@ -52,8 +52,6 @@
 #include <boost/bind.hpp>
 #include <algorithm>
 
-#include <lastfm/ScrobblePoint>
-
 using smart_playlists::Generator;
 using smart_playlists::GeneratorInserter;
 using smart_playlists::GeneratorPtr;
@@ -1190,10 +1188,9 @@ Song Playlist::current_item_metadata() const {
 }
 
 void Playlist::UpdateScrobblePoint() {
-  int length = qMin(current_item_metadata().length(), 240);
+  const int length = current_item_metadata().length();
 
-  ScrobblePoint point(length / 2);
-  scrobble_point_ = point;
+  scrobble_point_ = length == 0 ? 240 : qBound(31, length/2, 240);
   has_scrobbled_ = false;
 }
 
diff --git a/src/radio/radiomodel.cpp b/src/radio/radiomodel.cpp
index f53fc6a..2d1c787 100644
--- a/src/radio/radiomodel.cpp
+++ b/src/radio/radiomodel.cpp
@@ -18,7 +18,6 @@
 #include "core/mergedproxymodel.h"
 #include "icecastservice.h"
 #include "jamendoservice.h"
-#include "lastfmservice.h"
 #include "magnatuneservice.h"
 #include "radiomimedata.h"
 #include "radiomodel.h"
@@ -26,6 +25,10 @@
 #include "savedradio.h"
 #include "somafmservice.h"
 
+#ifdef HAVE_LIBLASTFM
+  #include "lastfmservice.h"
+#endif
+
 #include <QMimeData>
 #include <QtDebug>
 
@@ -43,7 +46,9 @@ RadioModel::RadioModel(BackgroundThread<Database>* db_thread,
   root_->lazy_loaded = true;
   merged_model_->setSourceModel(this);
 
+#ifdef HAVE_LIBLASTFM
   AddService(new LastFMService(this));
+#endif
   AddService(new SomaFMService(this));
   AddService(new MagnatuneService(this));
   AddService(new JamendoService(this));
@@ -139,11 +144,13 @@ QMimeData* RadioModel::mimeData(const QModelIndexList& indexes) const {
   return data;
 }
 
+#ifdef HAVE_LIBLASTFM
 LastFMService* RadioModel::GetLastFMService() const {
   if (sServices.contains(LastFMService::kServiceName))
     return static_cast<LastFMService*>(sServices[LastFMService::kServiceName]);
   return NULL;
 }
+#endif
 
 void RadioModel::ShowContextMenu(RadioItem* item, const QModelIndex& index,
                                  const QPoint& global_pos) {
diff --git a/src/radio/radiomodel.h b/src/radio/radiomodel.h
index 010129f..00f1bc8 100644
--- a/src/radio/radiomodel.h
+++ b/src/radio/radiomodel.h
@@ -27,12 +27,15 @@
 #include "widgets/multiloadingindicator.h"
 
 class Database;
-class LastFMService;
 class MergedProxyModel;
 class RadioService;
 class SettingsDialog;
 class TaskManager;
 
+#ifdef HAVE_LIBLASTFM
+  class LastFMService;
+#endif
+
 class RadioModel : public SimpleTreeModel<RadioItem> {
   Q_OBJECT
 
@@ -58,7 +61,9 @@ class RadioModel : public SimpleTreeModel<RadioItem> {
   }
 
   // This is special because Player needs it for scrobbling
+#ifdef HAVE_LIBLASTFM
   LastFMService* GetLastFMService() const;
+#endif
 
   // QAbstractItemModel
   QVariant data(const QModelIndex & index, int role = Qt::DisplayRole) const;
diff --git a/src/songinfo/artistinfoview.cpp b/src/songinfo/artistinfoview.cpp
index 08a6bb0..c4987eb 100644
--- a/src/songinfo/artistinfoview.cpp
+++ b/src/songinfo/artistinfoview.cpp
@@ -18,18 +18,23 @@
 #include "artistinfoview.h"
 #include "echonestbiographies.h"
 #include "echonestimages.h"
-#include "echonestsimilarartists.h"
-#include "echonesttags.h"
 #include "songinfofetcher.h"
 #include "widgets/prettyimageview.h"
 
+#ifdef HAVE_LIBLASTFM
+  #include "echonestsimilarartists.h"
+  #include "echonesttags.h"
+#endif
+
 ArtistInfoView::ArtistInfoView(QWidget *parent)
   : SongInfoBase(parent)
 {
   fetcher_->AddProvider(new EchoNestBiographies);
   fetcher_->AddProvider(new EchoNestImages);
+#ifdef HAVE_LIBLASTFM
   fetcher_->AddProvider(new EchoNestSimilarArtists);
   fetcher_->AddProvider(new EchoNestTags);
+#endif
 }
 
 ArtistInfoView::~ArtistInfoView() {
diff --git a/src/songinfo/songinfoview.cpp b/src/songinfo/songinfoview.cpp
index 9b31f48..e53d9e8 100644
--- a/src/songinfo/songinfoview.cpp
+++ b/src/songinfo/songinfoview.cpp
@@ -15,12 +15,16 @@
    along with Clementine.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "lastfmtrackinfoprovider.h"
+#include "config.h"
 #include "songinfoprovider.h"
 #include "songinfoview.h"
 #include "ultimatelyricsprovider.h"
 #include "ultimatelyricsreader.h"
 
+#ifdef HAVE_LIBLASTFM
+  #include "lastfmtrackinfoprovider.h"
+#endif
+
 #include <QFuture>
 #include <QFutureWatcher>
 #include <QSettings>
@@ -42,7 +46,9 @@ SongInfoView::SongInfoView(QWidget* parent)
   watcher->setFuture(future);
   connect(watcher, SIGNAL(finished()), SLOT(UltimateLyricsParsed()));
 
+#ifdef HAVE_LIBLASTFM
   fetcher_->AddProvider(new LastfmTrackInfoProvider);
+#endif
 }
 
 SongInfoView::~SongInfoView() {
diff --git a/src/ui/mainwindow.cpp b/src/ui/mainwindow.cpp
index cada56f..e548564 100644
--- a/src/ui/mainwindow.cpp
+++ b/src/ui/mainwindow.cpp
@@ -51,7 +51,6 @@
 #include "playlist/songloaderinserter.h"
 #include "playlist/songplaylistitem.h"
 #include "playlistparsers/playlistparser.h"
-#include "radio/lastfmservice.h"
 #include "radio/magnatuneservice.h"
 #include "radio/radiomodel.h"
 #include "radio/radioview.h"
@@ -63,13 +62,9 @@
 #include "transcoder/transcodedialog.h"
 #include "ui/about.h"
 #include "ui/addstreamdialog.h"
-#include "ui/albumcovermanager.h"
 #include "ui/edittagdialog.h"
 #include "ui/equalizer.h"
 #include "ui/iconloader.h"
-#ifdef Q_OS_DARWIN
-#include "ui/macsystemtrayicon.h"
-#endif
 #include "ui/organisedialog.h"
 #include "ui/organiseerrordialog.h"
 #include "ui/qtsystemtrayicon.h"
@@ -82,6 +77,15 @@
 #include "widgets/stylehelper.h"
 #include "widgets/trackslider.h"
 
+#ifdef Q_OS_DARWIN
+# include "ui/macsystemtrayicon.h"
+#endif
+
+#ifdef HAVE_LIBLASTFM
+# include "radio/lastfmservice.h"
+# include "ui/albumcovermanager.h"
+#endif
+
 #ifdef ENABLE_WIIMOTEDEV
 # include "wiimotedev/shortcuts.h"
 #endif
@@ -148,7 +152,9 @@ MainWindow::MainWindow(Engine::Type engine, QWidget *parent)
     song_info_view_(new SongInfoView(this)),
     artist_info_view_(new ArtistInfoView(this)),
     settings_dialog_(NULL),
+#ifdef HAVE_LIBLASTFM
     cover_manager_(NULL),
+#endif
     equalizer_(new Equalizer),
     error_dialog_(NULL),
     organise_dialog_(new OrganiseDialog(task_manager_)),
@@ -174,7 +180,11 @@ MainWindow::MainWindow(Engine::Type engine, QWidget *parent)
 
   // Create stuff that needs the database
   radio_model_ = new RadioModel(database_, task_manager_, this);
-  player_ = new Player(this, playlists_, radio_model_->GetLastFMService(), engine, this);
+  player_ = new Player(this, playlists_,
+#ifdef HAVE_LIBLASTFM
+                       radio_model_->GetLastFMService(),
+#endif
+                       engine, this);
   library_ = new Library(database_, task_manager_, this);
   devices_ = new DeviceManager(database_, task_manager_, this);
 
@@ -286,8 +296,10 @@ MainWindow::MainWindow(Engine::Type engine, QWidget *parent)
   connect(ui_->action_quit, SIGNAL(triggered()), qApp, SLOT(quit()));
   connect(ui_->action_stop_after_this_track, SIGNAL(triggered()), SLOT(StopAfterCurrent()));
   connect(ui_->action_mute, SIGNAL(triggered()), player_, SLOT(Mute()));
+#ifdef HAVE_LIBLASTFM
   connect(ui_->action_ban, SIGNAL(triggered()), radio_model_->GetLastFMService(), SLOT(Ban()));
   connect(ui_->action_love, SIGNAL(triggered()), SLOT(Love()));
+#endif
   connect(ui_->action_clear_playlist, SIGNAL(triggered()), playlists_, SLOT(ClearCurrent()));
   connect(ui_->action_remove_from_playlist, SIGNAL(triggered()), SLOT(PlaylistRemoveCurrent()));
   connect(ui_->action_edit_track, SIGNAL(triggered()), SLOT(EditTracks()));
@@ -302,7 +314,11 @@ MainWindow::MainWindow(Engine::Type engine, QWidget *parent)
   connect(ui_->action_add_file, SIGNAL(triggered()), SLOT(AddFile()));
   connect(ui_->action_add_folder, SIGNAL(triggered()), SLOT(AddFolder()));
   connect(ui_->action_add_stream, SIGNAL(triggered()), SLOT(AddStream()));
+#ifdef HAVE_LIBLASTFM
   connect(ui_->action_cover_manager, SIGNAL(triggered()), SLOT(ShowCoverManager()));
+#else
+  ui_->action_cover_manager->setVisible(false);
+#endif
   connect(ui_->action_equalizer, SIGNAL(triggered()), equalizer_.get(), SLOT(show()));
   connect(ui_->action_transcode, SIGNAL(triggered()), SLOT(ShowTranscodeDialog()));
   connect(ui_->action_jump, SIGNAL(triggered()), ui_->playlist->view(), SLOT(JumpToCurrentlyPlayingTrack()));
@@ -453,12 +469,18 @@ MainWindow::MainWindow(Engine::Type engine, QWidget *parent)
   connect(radio_model_, SIGNAL(OpenSettingsAtPage(SettingsDialog::Page)), SLOT(OpenSettingsDialogAtPage(SettingsDialog::Page)));
   connect(radio_model_, SIGNAL(AddItemToPlaylist(RadioItem*,bool)), SLOT(InsertRadioItem(RadioItem*,bool)));
   connect(radio_model_, SIGNAL(AddItemsToPlaylist(PlaylistItemList,bool)), SLOT(InsertRadioItems(PlaylistItemList,bool)));
+#ifdef HAVE_LIBLASTFM
   connect(radio_model_->GetLastFMService(), SIGNAL(ScrobblingEnabledChanged(bool)), SLOT(ScrobblingEnabledChanged(bool)));
   connect(radio_model_->GetLastFMService(), SIGNAL(ButtonVisibilityChanged(bool)), SLOT(LastFMButtonVisibilityChanged(bool)));
+#endif
   connect(radio_view_->tree(), SIGNAL(doubleClicked(QModelIndex)), SLOT(RadioDoubleClick(QModelIndex)));
   connect(radio_model_->Service<MagnatuneService>(), SIGNAL(DownloadFinished(QStringList)), osd_, SLOT(MagnatuneDownloadFinished(QStringList)));
 
+#ifdef HAVE_LIBLASTFM
   LastFMButtonVisibilityChanged(radio_model_->GetLastFMService()->AreButtonsVisible());
+#else
+  LastFMButtonVisibilityChanged(false);
+#endif
 
   // Connections to the saved streams service
   connect(RadioModel::Service<SavedRadio>(), SIGNAL(ShowAddStreamDialog()), SLOT(AddStream()));
@@ -766,6 +788,7 @@ void MainWindow::MediaPlaying() {
   ui_->action_play_pause->setEnabled(
       ! (player_->GetCurrentItem()->options() & PlaylistItem::PauseDisabled));
 
+#ifdef HAVE_LIBLASTFM
   bool is_lastfm = (player_->GetCurrentItem()->options() & PlaylistItem::LastFMControls);
   LastFMService* lastfm = radio_model_->GetLastFMService();
 
@@ -773,6 +796,9 @@ void MainWindow::MediaPlaying() {
   ui_->action_love->setEnabled(lastfm->IsScrobblingEnabled());
 
   ui_->track_slider->SetCanSeek(!is_lastfm);
+#else
+  ui_->track_slider->SetCanSeek(true);
+#endif
 
   track_position_timer_->start();
   UpdateTrackPosition();
@@ -801,6 +827,7 @@ void MainWindow::TrackSkipped(PlaylistItemPtr item) {
   }
 }
 
+#ifdef HAVE_LIBLASTFM
 void MainWindow::ScrobblingEnabledChanged(bool value) {
   if (!player_->GetState() == Engine::Idle)
     return;
@@ -809,6 +836,7 @@ void MainWindow::ScrobblingEnabledChanged(bool value) {
   ui_->action_ban->setEnabled(value && is_lastfm);
   ui_->action_love->setEnabled(value);
 }
+#endif
 
 void MainWindow::LastFMButtonVisibilityChanged(bool value) {
   ui_->action_ban->setVisible(value);
@@ -954,11 +982,12 @@ void MainWindow::UpdateTrackPosition() {
   }
 
   // Time to scrobble?
-  LastFMService* lastfm = radio_model_->GetLastFMService();
 
   if (!playlists_->active()->has_scrobbled() &&
       position >= playlists_->active()->scrobble_point()) {
-    lastfm->Scrobble();
+#ifdef HAVE_LIBLASTFM
+    radio_model_->GetLastFMService()->Scrobble();
+#endif
     playlists_->active()->set_scrobbled(true);
 
     // Update the play count for the song if it's from the library
@@ -976,10 +1005,12 @@ void MainWindow::UpdateTrackPosition() {
   }
 }
 
+#ifdef HAVE_LIBLASTFM
 void MainWindow::Love() {
   radio_model_->GetLastFMService()->Love();
   ui_->action_love->setEnabled(false);
 }
+#endif
 
 void MainWindow::RadioDoubleClick(const QModelIndex& index) {
   if (autoclear_playlist_)
@@ -1592,6 +1623,7 @@ void MainWindow::PlaylistCopyToDevice() {
   }
 }
 
+#ifdef HAVE_LIBLASTFM
 void MainWindow::ShowCoverManager() {
   if (!cover_manager_) {
     cover_manager_.reset(new AlbumCoverManager(library_->backend()));
@@ -1605,6 +1637,7 @@ void MainWindow::ShowCoverManager() {
 
   cover_manager_->show();
 }
+#endif
 
 void MainWindow::EnsureSettingsDialogCreated() {
   if (settings_dialog_)
diff --git a/src/ui/mainwindow.h b/src/ui/mainwindow.h
index 20483c6..e760548 100644
--- a/src/ui/mainwindow.h
+++ b/src/ui/mainwindow.h
@@ -33,7 +33,6 @@
 
 class About;
 class AddStreamDialog;
-class AlbumCoverManager;
 class ArtistInfoView;
 class BackgroundStreams;
 class CommandlineOptions;
@@ -70,6 +69,10 @@ class Ui_MainWindow;
 
 class QSortFilterProxyModel;
 
+#ifdef HAVE_LIBLASTFM
+  class AlbumCoverManager;
+#endif
+
 class MainWindow : public QMainWindow, public PlatformInterface {
   Q_OBJECT
 
@@ -163,9 +166,11 @@ class MainWindow : public QMainWindow, public PlatformInterface {
   void RadioDoubleClick(const QModelIndex& index);
   void InsertRadioItem(RadioItem*, bool clear_first);
   void InsertRadioItems(const PlaylistItemList& items, bool clear_first);
-  void ScrobblingEnabledChanged(bool value);
   void LastFMButtonVisibilityChanged(bool value);
+#ifdef HAVE_LIBLASTFM
+  void ScrobblingEnabledChanged(bool value);
   void Love();
+#endif
 
   void TaskCountChanged(int count);
 
@@ -186,7 +191,9 @@ class MainWindow : public QMainWindow, public PlatformInterface {
 
   void SongSaveComplete();
 
+#ifdef HAVE_LIBLASTFM
   void ShowCoverManager();
+#endif
   void ShowAboutDialog();
   void ShowTranscodeDialog();
   void ShowErrorDialog(const QString& message);
@@ -241,7 +248,9 @@ class MainWindow : public QMainWindow, public PlatformInterface {
 
   boost::scoped_ptr<SettingsDialog> settings_dialog_;
   boost::scoped_ptr<AddStreamDialog> add_stream_dialog_;
+#ifdef HAVE_LIBLASTFM
   boost::scoped_ptr<AlbumCoverManager> cover_manager_;
+#endif
   boost::scoped_ptr<Equalizer> equalizer_;
   boost::scoped_ptr<TranscodeDialog> transcode_dialog_;
   boost::scoped_ptr<ErrorDialog> error_dialog_;
diff --git a/src/ui/settingsdialog.cpp b/src/ui/settingsdialog.cpp
index ad97658..23ddc0b 100644
--- a/src/ui/settingsdialog.cpp
+++ b/src/ui/settingsdialog.cpp
@@ -28,6 +28,10 @@
 
 #include "ui_settingsdialog.h"
 
+#ifdef HAVE_LIBLASTFM
+#include "radio/lastfmconfig.h"
+#endif
+
 #ifdef ENABLE_WIIMOTEDEV
 #include "ui/wiimotedevshortcutsconfig.h"
 #include "ui_wiimotedevshortcutsconfig.h"
@@ -95,6 +99,22 @@ SettingsDialog::SettingsDialog(BackgroundStreams* streams, QWidget* parent)
   pretty_popup_->SetMessage(tr("OSD Preview"), tr("Drag to reposition"),
                             QImage(":nocover.png"));
 
+#ifdef HAVE_LIBLASTFM
+  ui_->list->insertItem(Page_Lastfm, tr("Last.fm"));
+  ui_->list->item(Page_Lastfm)->setIcon(QIcon(":/last.fm/as.png"));
+
+  QWidget* lastfm_page = new QWidget;
+  QVBoxLayout* lastfm_layout = new QVBoxLayout;
+  lastfm_layout->setContentsMargins(0, 0, 0, 0);
+  lastfm_config_ = new LastFMConfig;
+  lastfm_layout->addWidget(lastfm_config_);
+  lastfm_page->setLayout(lastfm_layout);
+
+  ui_->stacked_widget->insertWidget(Page_Lastfm, lastfm_page);
+
+  connect(lastfm_config_, SIGNAL(ValidationComplete(bool)), SLOT(LastFMValidationComplete(bool)));
+#endif
+
   // Icons
   ui_->list->item(Page_Playback)->setIcon(IconLoader::Load("media-playback-start"));
   ui_->list->item(Page_SongInformation)->setIcon(IconLoader::Load("view-media-lyrics"));
@@ -177,9 +197,6 @@ SettingsDialog::SettingsDialog(BackgroundStreams* streams, QWidget* parent)
   }
 #endif
 
-  // Last.fm
-  connect(ui_->lastfm, SIGNAL(ValidationComplete(bool)), SLOT(LastFMValidationComplete(bool)));
-
   // List box
   connect(ui_->list, SIGNAL(currentTextChanged(QString)), SLOT(CurrentTextChanged(QString)));
   ui_->list->setCurrentRow(Page_Playback);
@@ -230,21 +247,25 @@ void SettingsDialog::SetGlobalShortcutManager(GlobalShortcuts *manager) {
   ui_->global_shortcuts->SetManager(manager);
 }
 
+#ifdef HAVE_LIBLASTFM
 void SettingsDialog::LastFMValidationComplete(bool success) {
   ui_->buttonBox->setEnabled(true);
 
   if (success)
     accept();
 }
+#endif
 
 void SettingsDialog::accept() {
-  if (ui_->lastfm->NeedsValidation()) {
-    ui_->lastfm->Validate();
+#ifdef HAVE_LIBLASTFM
+  if (lastfm_config_->NeedsValidation()) {
+    lastfm_config_->Validate();
     ui_->buttonBox->setEnabled(false);
     return;
   } else {
-    ui_->lastfm->Save();
+    lastfm_config_->Save();
   }
+#endif
 
   QSettings s;
 
@@ -397,7 +418,9 @@ void SettingsDialog::showEvent(QShowEvent*) {
   ui_->lyric_settings->Load();
 
   // Last.fm
-  ui_->lastfm->Load();
+#ifdef HAVE_LIBLASTFM
+  lastfm_config_->Load();
+#endif
 
   // Magnatune
   ui_->magnatune->Load();
diff --git a/src/ui/settingsdialog.h b/src/ui/settingsdialog.h
index d96c775..53fc8bb 100644
--- a/src/ui/settingsdialog.h
+++ b/src/ui/settingsdialog.h
@@ -35,6 +35,9 @@ class OSDPretty;
 class SongInfoView;
 class Ui_SettingsDialog;
 
+#ifdef HAVE_LIBLASTFM
+  class LastFMConfig;
+#endif
 #ifdef ENABLE_WIIMOTEDEV
   class WiimotedevShortcutsConfig;
 #endif
@@ -55,7 +58,9 @@ class SettingsDialog : public QDialog {
     Page_GlobalShortcuts,
     Page_Notifications,
     Page_Library,
+#ifdef HAVE_LIBLASTFM
     Page_Lastfm,
+#endif
     Page_Magnatune,
     Page_BackgroundStreams,
 #ifdef ENABLE_WIIMOTEDEV
@@ -85,7 +90,9 @@ class SettingsDialog : public QDialog {
  private slots:
   void CurrentTextChanged(const QString& text);
   void NotificationTypeChanged();
+#ifdef HAVE_LIBLASTFM
   void LastFMValidationComplete(bool success);
+#endif
 
   void PrettyOpacityChanged(int value);
   void PrettyColorPresetChanged(int index);
@@ -105,6 +112,9 @@ class SettingsDialog : public QDialog {
   void StreamVolumeChanged(int value);
 
  private:
+#ifdef HAVE_LIBLASTFM
+  LastFMConfig* lastfm_config_;
+#endif
 #ifdef ENABLE_WIIMOTEDEV
   WiimotedevShortcutsConfig* wiimotedev_config_;
 #endif
diff --git a/src/ui/settingsdialog.ui b/src/ui/settingsdialog.ui
index b0a31ce..32ea5e8 100644
--- a/src/ui/settingsdialog.ui
+++ b/src/ui/settingsdialog.ui
@@ -86,15 +86,6 @@
      </item>
      <item>
       <property name="text">
-       <string>Last.fm</string>
-      </property>
-      <property name="icon">
-       <iconset resource="../../data/data.qrc">
-        <normaloff>:/last.fm/as.png</normaloff>:/last.fm/as.png</iconset>
-      </property>
-     </item>
-     <item>
-      <property name="text">
        <string>Magnatune</string>
       </property>
       <property name="icon">
@@ -777,16 +768,6 @@
          </item>
         </layout>
        </widget>
-       <widget class="QWidget" name="lastfm_page">
-        <layout class="QVBoxLayout" name="verticalLayout_5">
-         <property name="margin">
-          <number>0</number>
-         </property>
-         <item>
-          <widget class="LastFMConfig" name="lastfm" native="true"/>
-         </item>
-        </layout>
-       </widget>
        <widget class="QWidget" name="magnatune_page">
         <layout class="QVBoxLayout" name="verticalLayout_11">
          <property name="spacing">
@@ -851,12 +832,6 @@
    <header>widgets/lineedit.h</header>
   </customwidget>
   <customwidget>
-   <class>LastFMConfig</class>
-   <extends>QWidget</extends>
-   <header>radio/lastfmconfig.h</header>
-   <container>1</container>
-  </customwidget>
-  <customwidget>
    <class>LibraryConfig</class>
    <extends>QWidget</extends>
    <header>library/libraryconfig.h</header>
